import * as THREE from "three";
import React, { useRef, useEffect, useState } from "react";
import { useThree, useLoader } from "@react-three/fiber";
import { Button, Col, Row, Image, Badge } from "antd";
function Sound(props: any) {
  // const sound = useRef(null);
  const { loading, started, isModalOpenVideo } = props;
  // const { camera } = useThree();
  // const [listener] = useState(() => new THREE.AudioListener());
  // const buffer = useLoader(THREE.AudioLoader, url);
  // useEffect(() => {
  //   sound.current.setBuffer(buffer);
  //   sound.current.setRefDistance(1);
  //   sound.current.setLoop(true);
  //   sound.current.play();
  //   camera.add(listener);
  //   return () => camera.remove(listener);
  // }, []);
  // return <positionalAudio ref={sound} args={[listener]} />;
  const [play, setPlay] = useState(false);
  const [audio, setAudio] = useState(new Audio("/files/dior-vibe-music.mp3"));
  const playPause = () => {
    // Get state of song
    let isPlaying = play;

    if (isPlaying) {
      // Pause the song if it is playing
      audio.pause();
    } else {
      // Play the song if it is paused
      audio.play();
    }

    // Change the state of song
    setPlay((prev) => !prev);
  };
  useEffect(() => {
    console.log(loading);
    if (isModalOpenVideo) {
      audio.pause();
      setPlay(false);
    }
  }, [isModalOpenVideo]);

  return (
    <>
      <Button
        style={{
          border: 0,
          fontSize: "1.5em",
          padding: 0,
          paddingTop: 6,
        }}
        size="large"
        ghost
        onClick={playPause}
      >
        {play && (
          <>
            <svg
              width="26"
              height="26"
              viewBox="0 0 20 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M11 17.4609L5.34 13.4609H3C2.73478 13.4609 2.48043 13.3556 2.29289 13.168C2.10536 12.9805 2 12.7262 2 12.4609V7.46094C2 7.19572 2.10536 6.94137 2.29289 6.75383C2.48043 6.56629 2.73478 6.46094 3 6.46094H5.34L11 2.46094V17.4609ZM3 7.50094V12.5009H5.34C5.54732 12.4994 5.75 12.5623 5.92 12.6809L10 15.5409V4.46094L5.92 7.32094C5.75 7.43961 5.54732 7.50251 5.34 7.50094H3Z"
                fill="white"
              />
              <path
                d="M14.61 15.8615C14.5118 15.8635 14.4156 15.8332 14.3361 15.7754C14.2567 15.7176 14.1983 15.6354 14.17 15.5414C14.1417 15.4473 14.1449 15.3465 14.1792 15.2544C14.2135 15.1624 14.277 15.0841 14.36 15.0315C15.1914 14.4854 15.874 13.7412 16.3464 12.8657C16.8188 11.9903 17.0661 11.0112 17.0661 10.0165C17.0661 9.02175 16.8188 8.04262 16.3464 7.16721C15.874 6.2918 15.1914 5.54756 14.36 5.00148C14.3107 4.96864 14.2684 4.92644 14.2355 4.87726C14.2026 4.82808 14.1797 4.7729 14.168 4.71486C14.1564 4.65683 14.1564 4.59707 14.1679 4.53901C14.1793 4.48095 14.2022 4.42572 14.235 4.37648C14.2678 4.32723 14.31 4.28493 14.3592 4.252C14.4084 4.21907 14.4636 4.19614 14.5216 4.18453C14.5796 4.17293 14.6394 4.17286 14.6974 4.18435C14.7555 4.19584 14.8107 4.21864 14.86 4.25148C15.8005 4.89396 16.57 5.75624 17.1017 6.76347C17.6334 7.77071 17.9114 8.89249 17.9114 10.0315C17.9114 11.1705 17.6334 12.2922 17.1017 13.2995C16.57 14.3067 15.8005 15.169 14.86 15.8115C14.7825 15.8499 14.6963 15.8672 14.61 15.8615Z"
                fill="white"
              />
              <path
                d="M13.24 13.7709C13.1409 13.7752 13.0431 13.7467 12.9619 13.6897C12.8807 13.6327 12.8206 13.5505 12.791 13.4559C12.7613 13.3612 12.7638 13.2594 12.798 13.1662C12.8321 13.0731 12.8962 12.9939 12.98 12.9409C13.4626 12.6172 13.8582 12.1797 14.1317 11.667C14.4052 11.1542 14.5482 10.582 14.5482 10.0009C14.5482 9.41979 14.4052 8.8476 14.1317 8.33486C13.8582 7.82212 13.4626 7.3846 12.98 7.06091C12.8806 6.99328 12.8121 6.88891 12.7895 6.77076C12.767 6.65261 12.7924 6.53037 12.86 6.43091C12.9277 6.33145 13.032 6.26294 13.1502 6.24043C13.2683 6.21793 13.3906 6.24328 13.49 6.31091C14.0943 6.71824 14.5893 7.26774 14.9316 7.91114C15.2738 8.55455 15.4528 9.27215 15.4528 10.0009C15.4528 10.7297 15.2738 11.4473 14.9316 12.0907C14.5893 12.7341 14.0943 13.2836 13.49 13.6909C13.4155 13.7398 13.3291 13.7675 13.24 13.7709Z"
                fill="white"
              />
            </svg>
          </>
        )}
        {!play && (
          <>
            <svg
              width="26"
              height="26"
              viewBox="0 0 20 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 6.50004C2.73478 6.50004 2.48043 6.6054 2.29289 6.79293C2.10536 6.98047 2 7.23482 2 7.50004V12.5C2 12.7653 2.10536 13.0196 2.29289 13.2071C2.48043 13.3947 2.73478 13.5 3 13.5H5.34L11 17.5V2.54004L5.34 6.54004L3 6.50004ZM10 4.50004V15.54L5.92 12.68C5.75 12.5614 5.54732 12.4985 5.34 12.5H3V7.50004H5.34C5.54732 7.50161 5.75 7.43871 5.92 7.32004L10 4.50004Z"
                fill="white"
              />
              <path
                d="M16.1399 10.0004L17.8199 8.3204C17.9048 8.23553 17.9525 8.12042 17.9525 8.0004C17.9525 7.88038 17.9048 7.76527 17.8199 7.6804C17.735 7.59553 17.6199 7.54785 17.4999 7.54785C17.3799 7.54785 17.2648 7.59553 17.1799 7.6804L15.4999 9.3604L13.8199 7.6804C13.735 7.59553 13.6199 7.54785 13.4999 7.54785C13.3799 7.54785 13.2648 7.59553 13.1799 7.6804C13.095 7.76527 13.0474 7.88038 13.0474 8.0004C13.0474 8.12042 13.095 8.23553 13.1799 8.3204L14.8599 10.0004L13.1799 11.6804C13.0991 11.7674 13.0541 11.8817 13.0541 12.0004C13.0541 12.1191 13.0991 12.2334 13.1799 12.3204C13.2657 12.4035 13.3805 12.4499 13.4999 12.4499C13.6194 12.4499 13.7341 12.4035 13.8199 12.3204L15.4999 10.6404L17.1799 12.3204C17.2657 12.4035 17.3805 12.4499 17.4999 12.4499C17.6194 12.4499 17.7341 12.4035 17.8199 12.3204C17.9007 12.2334 17.9457 12.1191 17.9457 12.0004C17.9457 11.8817 17.9007 11.7674 17.8199 11.6804L16.1399 10.0004Z"
                fill="white"
              />
            </svg>
          </>
        )}
      </Button>
    </>
  );
  // song.pause();
}
export default Sound;
